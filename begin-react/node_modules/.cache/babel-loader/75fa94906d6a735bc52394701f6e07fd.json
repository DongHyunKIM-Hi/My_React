{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uB3D9\\uD604\\\\React_practice\\\\My_react\\\\begin-react\\\\src\\\\App.js\";\nimport React, { useRef, useReducer, useMemo, useCallback } from \"react\";\nimport UserList from \"./UserList\";\nimport CreateUser from \"./CreateUser\";\nimport useInputs from \"./useInputs\";\nimport produce from 'immer';\n\nfunction countActiveUsers(users) {\n  console.log(\"활성 사용자 수를 세는중...\");\n  return users.filter(user => user.active).length;\n}\n\nwindow.produce = produce;\nconst initialState = {\n  users: [{\n    id: 1,\n    username: \"velopert\",\n    email: \"public.velopert@gmail.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"tester\",\n    email: \"tester@example.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"liz\",\n    email: \"liz@example.com\",\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return {\n        users: state.users.concat(action.user)\n      };\n\n    case \"TOGGLE_USER\":\n      return { ...state,\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case \"REMOVE_USER\":\n      return { ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [{\n    username,\n    email\n  }, onChange, reset] = useInputs({\n    username: \"\",\n    email: \"\"\n  });\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: \"CREATE_USER\",\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    reset();\n    nextId.current += 1;\n  }, [username, email, reset]);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: \"TOGGLE_USER\",\n      id\n    });\n  }, []);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: \"REMOVE_USER\",\n      id\n    });\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UserList, {\n    users: users,\n    onToggle: onToggle,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/김동현/React_practice/My_react/begin-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","useInputs","produce","countActiveUsers","users","console","log","filter","user","active","length","window","initialState","id","username","email","reducer","state","action","type","concat","map","App","onChange","reset","dispatch","nextId","onCreate","current","onToggle","onRemove","count"],"mappings":"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","sourcesContent":["import React, { useRef, useReducer, useMemo, useCallback } from \"react\";\nimport UserList from \"./UserList\";\nimport CreateUser from \"./CreateUser\";\nimport useInputs from \"./useInputs\";\nimport produce from 'immer';\nfunction countActiveUsers(users) {\n  console.log(\"활성 사용자 수를 세는중...\");\n  return users.filter(user => user.active).length;\n}\nwindow.produce=produce;\nconst initialState = {\n  users: [\n    {\n      id: 1,\n      username: \"velopert\",\n      email: \"public.velopert@gmail.com\",\n      active: true\n    },\n    {\n      id: 2,\n      username: \"tester\",\n      email: \"tester@example.com\",\n      active: false\n    },\n    {\n      id: 3,\n      username: \"liz\",\n      email: \"liz@example.com\",\n      active: false\n    }\n  ]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return {\n        users: state.users.concat(action.user)\n      };\n    case \"TOGGLE_USER\":\n      return {\n        ...state,\n        users: state.users.map(user =>\n          user.id === action.id ? { ...user, active: !user.active } : user\n        )\n      };\n    case \"REMOVE_USER\":\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [{ username, email }, onChange, reset] = useInputs({\n    username: \"\",\n    email: \"\"\n  });\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n\n  const { users } = state;\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: \"CREATE_USER\",\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    reset();\n    nextId.current += 1;\n  }, [username, email, reset]);\n\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: \"TOGGLE_USER\",\n      id\n    });\n  }, []);\n\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: \"REMOVE_USER\",\n      id\n    });\n  }, []);\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onToggle={onToggle} onRemove={onRemove} />\n      <div>활성사용자 수 : {count}</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}