{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uB3D9\\uD604\\\\React_practice\\\\My_react\\\\begin-react\\\\src\\\\App.js\";\nimport React, { useReducer, useMemo } from \"react\";\nimport UserList from \"./UserList\";\nimport CreateUser from \"./CreateUser\";\nimport produce from \"immer\";\n\nfunction countActiveUsers(users) {\n  console.log(\"활성 사용자 수를 세는중...\");\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [{\n    id: 1,\n    username: \"velopert\",\n    email: \"public.velopert@gmail.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"tester\",\n    email: \"tester@example.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"liz\",\n    email: \"liz@example.com\",\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return produce(state, draft => {\n        draft.users.push(action.user);\n      });\n\n    case \"TOGGLE_USER\":\n      return produce(state, draft => {\n        const user = draft.users.find(user => user.id === action.id);\n        user.active = !user.active;\n      });\n\n    case \"REMOVE_USER\":\n      return produce(state, draft => {\n        const index = draft.users.findIndex(user => user.id === action.id);\n        draft.users.splice(index, 1);\n      });\n\n    default:\n      return state;\n  }\n} // UserDispatch 라는 이름으로 내보내줍니다.\n\n\nexport const UserDispatch = React.createContext(null);\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    users\n  } = state;\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/React.createElement(UserDispatch.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CreateUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UserList, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/김동현/React_practice/My_react/begin-react/src/App.js"],"names":["React","useReducer","useMemo","UserList","CreateUser","produce","countActiveUsers","users","console","log","filter","user","active","length","initialState","id","username","email","reducer","state","action","type","draft","push","find","index","findIndex","splice","UserDispatch","createContext","App","dispatch","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,OAApB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAA1B,EAAkCC,MAAzC;AACD;;AAED,MAAMC,YAAY,GAAG;AACnBP,EAAAA,KAAK,EAAE,CACL;AACEQ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,KAAK,EAAE,2BAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GADK,EAOL;AACEG,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,KAAK,EAAE,oBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAPK,EAaL;AACEG,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,KAAK,EAAE,iBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAbK;AADY,CAArB;;AAuBA,SAASM,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOhB,OAAO,CAACc,KAAD,EAAQG,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYgB,IAAZ,CAAiBH,MAAM,CAACT,IAAxB;AACD,OAFa,CAAd;;AAGF,SAAK,aAAL;AACE,aAAON,OAAO,CAACc,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMX,IAAI,GAAGW,KAAK,CAACf,KAAN,CAAYiB,IAAZ,CAAiBb,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYK,MAAM,CAACL,EAA5C,CAAb;AACAJ,QAAAA,IAAI,CAACC,MAAL,GAAc,CAACD,IAAI,CAACC,MAApB;AACD,OAHa,CAAd;;AAIF,SAAK,aAAL;AACE,aAAOP,OAAO,CAACc,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMG,KAAK,GAAGH,KAAK,CAACf,KAAN,CAAYmB,SAAZ,CAAsBf,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYK,MAAM,CAACL,EAAjD,CAAd;AACAO,QAAAA,KAAK,CAACf,KAAN,CAAYoB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD,OAHa,CAAd;;AAIF;AACE,aAAON,KAAP;AAhBJ;AAkBD,C,CAED;;;AACA,OAAO,MAAMS,YAAY,GAAG5B,KAAK,CAAC6B,aAAN,CAAoB,IAApB,CAArB;;AAEP,SAASC,GAAT,GAAe;AACb,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoB9B,UAAU,CAACiB,OAAD,EAAUJ,YAAV,CAApC;AAEA,QAAM;AAAEP,IAAAA;AAAF,MAAYY,KAAlB;AAEA,QAAMa,KAAK,GAAG9B,OAAO,CAAC,MAAMI,gBAAgB,CAACC,KAAD,CAAvB,EAAgC,CAACA,KAAD,CAAhC,CAArB;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEwB,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAExB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAgByB,KAAhB,CAHF,CADF;AAOD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useReducer, useMemo } from \"react\";\nimport UserList from \"./UserList\";\nimport CreateUser from \"./CreateUser\";\nimport produce from \"immer\";\n\nfunction countActiveUsers(users) {\n  console.log(\"활성 사용자 수를 세는중...\");\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [\n    {\n      id: 1,\n      username: \"velopert\",\n      email: \"public.velopert@gmail.com\",\n      active: true\n    },\n    {\n      id: 2,\n      username: \"tester\",\n      email: \"tester@example.com\",\n      active: false\n    },\n    {\n      id: 3,\n      username: \"liz\",\n      email: \"liz@example.com\",\n      active: false\n    }\n  ]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return produce(state, draft => {\n        draft.users.push(action.user);\n      });\n    case \"TOGGLE_USER\":\n      return produce(state, draft => {\n        const user = draft.users.find(user => user.id === action.id);\n        user.active = !user.active;\n      });\n    case \"REMOVE_USER\":\n      return produce(state, draft => {\n        const index = draft.users.findIndex(user => user.id === action.id);\n        draft.users.splice(index, 1);\n      });\n    default:\n      return state;\n  }\n}\n\n// UserDispatch 라는 이름으로 내보내줍니다.\nexport const UserDispatch = React.createContext(null);\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { users } = state;\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return (\n    <UserDispatch.Provider value={dispatch}>\n      <CreateUser />\n      <UserList users={users} />\n      <div>활성사용자 수 : {count}</div>\n    </UserDispatch.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}